package com.example.klef.contoller;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.klef.model.Employee;
import com.example.klef.service.EmpSer;

@RestController
@RequestMapping("/emp")
@CrossOrigin(origins ="*")
public class EmpContoller {
	
	@Autowired EmpSer es;
	
	
    @GetMapping("/demo1")
    public String demo1() {
        return "demo1";
    }
    @PostMapping("/insert")
    public String data(@RequestBody List<Employee> employees) {
        for (Employee emp : employees) {
            es.insert(emp);
        }
        return "Inserted " + employees.size() + " employees successfully!";
    }


     @GetMapping("/listAll")
     public List<Employee> get(){
    	 return es.getall();
     }
     

     @DeleteMapping("/delete/{id}")
     public ResponseEntity<String> deleteStudent(@PathVariable int id) {
         Employee existing = es.getEmployeeById(id);
         if (existing != null) {
             es.delete(id);
             return new ResponseEntity<>("Student with ID " + id + " deleted successfully.", HttpStatus.OK);
         } else {
             return new ResponseEntity<>("Cannot delete. Student with ID " + id + " not found.", HttpStatus.NOT_FOUND);
         }
     }

     @PostMapping("/register")
     public String register(@RequestBody Employee emp) {
         try {
             es.insert(emp);
             return "Registration successful!";
         } catch (Exception e) {
             e.printStackTrace();
             return "Error: " + e.getMessage();
         }
     }
}



